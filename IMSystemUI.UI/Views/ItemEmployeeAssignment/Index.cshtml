@model IEnumerable<IMSystemUI.Domain.ItemEmployeeAssignment>
@{
    ViewData["Title"] = "Item transfer";
    string isReturn = string.Empty;
    string date = string.Empty;
    string noneClass = string.Empty;
    string none = string.Empty;
    Layout = "_LayoutDashboard";
}
<h1>@ViewData["Title"]</h1>
<p>
    <a asp-action="Create" class="btn btn-light shadow-sm">Create Transfer</a>
</p>

<table class="table table-striped" id="tbl">
    <thead>
        <tr class="bg-opacity-10">
            <th hidden>
                @Html.DisplayNameFor(model => model.AssigmentId)
            </th>
            <th>
                Issuer
            </th>
            <th>
                Receiver
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item!.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTaken)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.IssueSignature)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.ReceiverSignature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateReturned)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.Condition)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.ResonForNotReturn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsReturned)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.AssigmentId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IssuerBy!.DisplayName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReceiverBy!.DisplayName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Item!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTaken)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.IssueSignature)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.ReceiverSignature)
                </td>

                <td>
                    @{
                        //  noneClass = "fa fa-times";
                        if (item.DateReturned.HasValue)
                        {
                            date = item.DateReturned.Value.Date.ToShortDateString();
                            noneClass = string.Empty;
                        }
                        // noneClass = "fa fa-times";
                    }
                    <span><i class="@noneClass" aria-hidden="true">@date</i></span>
                </td>

                <td hidden>
                    @Html.DisplayFor(modelItem => item.Condition)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.ResonForNotReturn)
                </td>

                <td>
                    @{
                        isReturn = item.IsReturned ? "fa fa-check-circle" : "fa fa-times-circle";
                    }
                    <span><i class="@isReturn" aria-hidden="true"></i></span>
                </td>

                <td>
                    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                        <div class="btn-group" role="group">
                            <button id="btnGroupDrop1" type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                Action
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                <li><a class="dropdown-item" href="/ItemEmployeeAssignment/Edit?id=@item.AssigmentId&itemId=@item.ItemId">Edit</a></li>
                                <li><a class="dropdown-item" href="/ItemEmployeeAssignment/Details?id=@item.AssigmentId">Details</a></li>
                                <li><a class="dropdown-item" href="/ItemEmployeeAssignment/Delete?id=@item.AssigmentId">Delete</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    @{
                                        none = item.IsReturned ? "dropdown-item d-none" : "dropdown-item";
                                    }
                                    <a class="@none"
                                       data-bs-toggle="modal"
                                       data-bs-target="#staticBackdrop"
                                       onclick="saveId('@item.AssigmentId')">Return Item</a>
                                </li>

                                @*<li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Report As Lost</a></li>*@
                                @*                            <li><hr class="dropdown-divider"></li>*@
                                <li><a class="dropdown-item" href="/ItemEmployeeAssignment/ViewItemTransferHistory?id=@item.ItemId">View Item History</a></li>
                            </ul>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Return Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="form-group col-12">
                    <label class="control-label"></label>
                    <textarea style="height: 100%; width: 100%; resize: none" rows="5"
                              class="form-control" id="validationTextarea" placeholder="Please provide Item Return Condition" required></textarea>

                    <span class="text-danger"></span>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline-primary shadow-sm m-0" onclick="ReturnItem()">Submit</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#tbl").DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'excel', 'pdf'
                ]
            });
        });

        function ReturnItem() {
            var note = $("#validationTextarea").val();
            //console.log(id);
            //console.log(note);

            if (note == "") {
                Swal.fire({
                    title: '',
                    text: 'Please provide item condition before submitting.',
                    icon: 'info'
                });

                return;
            }            

            $.ajax({
                url: "/ItemEmployeeAssignment/ReturnItem",
                method: "POST",
                data: { 'id': localStorage.getItem("itransfer"), 'note': note },
                success: function (result) {
                    if (result.success) {
                        $("#staticBackdrop").modal('hide');
                        $("#idationTextarea").val('');
                        window.location.href = "@Url.Action("Index", "ItemEmployeeAssignment")";
                        //toastr.success(result.message);
                        //setTimeout(function () { location.reload(); }, 500);
                    }
                    else {
                        Swal.fire({
                            title: 'info',
                            text: result.message,
                            icon: 'error'
                        });
                    }
                }
            })
        }

        function saveId(id) {
            localStorage.setItem("itransfer", id);
        }

    </script>
}