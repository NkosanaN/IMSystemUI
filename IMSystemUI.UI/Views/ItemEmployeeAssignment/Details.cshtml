@model IMSystemUI.Domain.ItemEmployeeAssignment

@{
    ViewData["Title"] = "Details Item Transfer";
    string returnCondiction = string.Empty;
    string reasonForNotReturn = string.Empty;
    string isReturn = string.Empty;
}

@*<h4>Details</h4>*@

<div>
    <table class="table rounded table-bordered shadow-lg">
        <thead class="alert-heading" style="background-color: #676e79;color: #fff">
            <tr>
                <th>@Html.DisplayNameFor(model => model.IssuerBy!.DisplayName)</th>
                <th>@Html.DisplayNameFor(model => model.ReceiverBy!.DisplayName)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DisplayFor(model => model.IssuerBy!.DisplayName) </td>
                <td> @Html.DisplayFor(model => model.ReceiverBy!.DisplayName)</td>
            </tr>
        </tbody>
    </table>

    <h4 class="text-center">Item </h4>
    <table class="table table-bordered shadow-lg">
        <thead class="alert-heading" style="background-color: #676e79;color: #fff">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Item!.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Item!.Serialno)</th>
            <th>@Html.DisplayNameFor(model => model.Item!.Description)</th>
            <th>@Html.DisplayNameFor(model => model.ReturnedCondition)</th>
            <th>@Html.DisplayNameFor(model => model.ResonForNotReturn)</th>
            <th>@Html.DisplayNameFor(model => model.Item!.DueforRepair)</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>@Html.DisplayFor(model => model.Item!.Name) </td>
            <td> @Html.DisplayFor(model =>  model.Item!.Serialno)</td>
            <td> @Html.DisplayFor(model =>   model.Item!.Description)</td>
            <td>
                @{
                    returnCondiction = Model!.ReturnedCondition;
                    if (string.IsNullOrEmpty(Model.ReturnedCondition))
                        returnCondiction = "N/A";
                }
                <text>@returnCondiction</text>
            </td>
            <td>
                @{
                    reasonForNotReturn = Model!.ResonForNotReturn;
                    if (string.IsNullOrEmpty(Model.ResonForNotReturn))
                        reasonForNotReturn = "N/A";
                }
                <text>@reasonForNotReturn</text>
            </td>
            <td>
                @{
                    isReturn = "fa fa-times-circle ";
                    if (Model.IsReturned)
                    {
                        isReturn = "fa fa-check-circle text-center";
                    }
                }
                <span><i class="@isReturn" aria-hidden="true"></i></span>
            </td>

        </tr>
        </tbody>
    </table>
    <div class="form-group mb-3">
        @Html.ActionLink("Edit", "Edit", new { id = Model.AssigmentId }, new { @class = "btn btn-light shadow-sm m-1" })
        <a asp-action="Index" class="btn btn-outline-secondary shadow-sm">Back to List</a>
    </div>
</div>


